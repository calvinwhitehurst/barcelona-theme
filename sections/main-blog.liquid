{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-article-card.css' | asset_url | stylesheet_tag }}
{{ 'component-article-card-small.css' | asset_url | stylesheet_tag }}
{{ 'component-additional-text.css' | asset_url | stylesheet_tag }}
{{ 'section-slideshow.css' | asset_url | stylesheet_tag }}
{{ 'section-main-blog.css' | asset_url | stylesheet_tag }}

<script src="{{ 'slideshow.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'load-more.js' | asset_url }}" defer="defer"></script>
{% comment %}<script src="{{ 'main-blog.js' | asset_url }}" defer="defer"></script>{% endcomment %}

{%- style -%}
	{% render 'section-padding' %}
	{% render 'section-margin' %}
{%- endstyle -%}

{% liquid
	assign slide_effects = section.settings.slide_effects
	assign parallax = section.settings.parallax
	assign slideshow_speed = section.settings.slideshow_speed
	assign autoplay = section.settings.is_autoplay
	assign stop_autoplay = section.settings.is_hover_stop_autoplay
	assign slideshow_delay = section.settings.slideshow_delay
	assign image_size = section.settings.image_size
	assign alignment = 'left'

	case image_size
		when 'adapt'
			assign section_size = 0
			assign slide_class = image_size
		when '1/1'
			assign section_size = '100%'
			assign slide_class = image_size
		when '3/2'
		assign section_size = '60%'
			assign slide_class = image_size
		when '4/3'
		assign section_size = '75%'
			assign slide_class = image_size
		when '16/9'
		assign section_size = '56%'
			assign slide_class = image_size
		when '21/9'
		assign section_size = '42.8%'
			assign slide_class = image_size
		when 'large'
			assign section_size = 'calc(100vh - var(--header-height) - var(--announcement-height))'
			assign slide_class = image_size
		else
			assign section_size = 'calc(100vh - var(--header-height) - var(--announcement-height))'
			assign slide_class = image_size
	endcase

	case alignment
		when 'left'
			assign section_style = 'margin : auto auto auto 0; text-align : left;'
		when 'center'
			assign section_style = 'margin : auto; text-align : center;'
		else
			assign section_style = 'auto 0'
	endcase
%}
{%liquid
	if section.blocks.size > 0
		assign per_row = 3
	else
		assign per_row = 4
	endif
%}
<style>
	:root {
		--per-row : {{ per_row }}
	}
</style>


	<div class="main-blog">
		{% comment %} Article slider start {% endcomment %}
		<div class="article-slider-padding section-{{ section.id }}-padding">
			<div
				class="slideshow {{ slide_class }}"
				data-id="shopify-section-{{ section.id }}"
				data-autoplay="{{ autoplay }}"
				data-stop-autoplay="{{ stop_autoplay }}"
				data-speed="{{ slideshow_speed }}"
				data-delay="{{ slideshow_delay }}"
				data-parallax="{{ parallax }}"
				data-effect="{{ slide_effects }}"
				style="--bullet-duration : {{ slideshow_delay }}s"
			>
				{% if section.settings.section_layout == "container" %}
					<div class="container">
				{% endif %}
				<div class="slideshow__swiper swiper background color-{{ section.settings.color_scheme }}">
					<div class="slideshow__wrapper swiper-wrapper">
						{% for article in blog.articles limit: 3 %}
							{% liquid
								if image_size == 'adapt'
									assign adapt_height = 1 | divided_by: article.image.aspect_ratio | times: 100 | append: '%'
									assign section_size = adapt_height
								endif
							%}
							{% style %}
								#article-{{ article.id }} .slideshow-slide {
									--slide-height : {{ section_size }};
								}
								#article-{{ article.id }} .have-overlay {
									--overlay-alpha : {{ section.settings.overlay_opacity }}%;
								}
							{% endstyle %}
							{%- render 'article-slider-card',
								article: article,
								show_image: section.settings.show_image,
								show_tags: section.settings.show_tags,
								show_date: section.settings.show_date,
								show_author: section.settings.show_author,
								btn_style: section.settings.button_style,
								enable_arrow: section.settings.button_arrow,
								section_style: section_style
							-%}
						{% endfor %}
					</div>
					{% if section.settings.show_bullets or section.settings.enable_additional_text %}
						<div class="slideshow-bottom slider-pagiantion-bullet color-{{ section.settings.color_scheme }}">
							<div class="container">
								<div class="slideshow-bottom__wrapper">
									{% if section.settings.show_bullets %}
											<div class="swiper-pagination__wrapper">
												<div class="swiper-pagination swiper-pagination__button"></div>
											</div>
									{% endif %}
									{% if section.settings.enable_additional_text %}
												<div class="additional-text">
													<div class="additional-text__desc small-font richtext__content">{{ section.settings.additional_text }}</div>
													<div class="additional-text__icon">{% render 'icon-additional-text' %}{% render 'icon-additional-text' %}</div>
												</div>
									{% endif %}
								</div>
							</div>
						</div>
					{% endif %}
				</div>
				{% if section.settings.section_layout == "container" %}
				</div>
				{% endif %}
			</div>
		</div>
		{% comment %} Article slider end {% endcomment %}
		{%- paginate blog.articles by 12 -%}
		<div class="container">
			{% liquid 
				assign block = section.blocks[0] 
				if block.settings.post_show or block.settings.newsletter_show or block.settings.inserted_show
					assign blocks_state = true
				endif
				if section.blocks.size > 0 and blocks_state
					assign have_aside = true
					if section.settings.card_type == 'overlay'
						assign per_row = 4
					else 
						assign per_row = 3
					endif
				else
					assign have_aside = false
					assign per_row = 4
				endif
			%}
			<div class="blog-articles__wrapper {% if have_aside %} blog-articles__wrapper-grid{% endif %}">
			<ul class="blog-articles load-more-grid list-unstyled{% if have_aside %} have-aside{% endif %}">
				{%- for article in blog.articles -%}
					<li>
						{%- render 'article-card',
							article: article,
							show_image: section.settings.show_image,
							show_tags: section.settings.show_tags,
							show_date: section.settings.show_date,
							show_author: section.settings.show_author,
							show_excerpt: section.settings.show_excerpt,
							card_type: section.settings.card_type,
							per_row: per_row
						-%}
					</li>
				{%- endfor -%}
			</ul>
			{% if section.blocks.size > 0 %}
				<aside class="blog-articles-aside">
					{% if block.settings.post_show and block.settings.posts_tag != blank %}
					<div class="blog-articles-aside__posts">
						<h3 class="blog-articles-aside__posts-header large-font">{{ block.settings.posts_heading }}</h3>
						
							{%liquid 
								for article in blog.articles
									for tag in article.tags
										assign tag_handle = tag | handle | strip
										assign setting_handle = block.settings.posts_tag | handle | strip
										if tag_handle == setting_handle
											render 'article-card-small', blog: blog, article: article, show_image: true, show_date: true
										endif
									endfor
								endfor
							%}
					</div>
				{% endif %}
			{% if block.settings.newsletter_show %}
				<div class="blog-articles-aside__newsletter">
					<div class="blog-articles-aside__newsletter-box color-{{ block.settings.color_scheme }} background">
						<div class="blog-articles-aside__newsletter-heading-box">
							<h3 class="blog-articles-aside__newsletter-header h6">{{ block.settings.newsletter_heading }}</h3>
							<div class="blog-articles-aside__newsletter-desc extra_small-font">{{ block.settings.newsletter_description }}</div>
						</div>
						{% form 'customer', class: 'newsletter-form' %}
							<div class="newsletter-form__inner">
								<input
									type="hidden"
									name="contact[tags]"
									value="newsletter"
								>
								<div class="newsletter-form__field-wrapper">
									<div class="field">
										<input
											id="NewsletterForm--{{ section.id }}"
											type="email"
											name="contact[email]"
											pattern="[a-z0-9._%+\-]+@[a-z0-9.\-]+\.[a-z]{2,}$"
											class="field__input field"
											value="{{ form.email }}"
											aria-required="true"
											autocorrect="off"
											autocapitalize="off"
											autocomplete="email"
											{% if form.errors %}
												autofocus
												aria-invalid="true"
												aria-describedby="Newsletter-error--{{ section.id }}"
											{% elsif form.posted_successfully? %}
												aria-describedby="Newsletter-success--{{ section.id }}"
											{% endif %}
											placeholder=" "
											required
										>
										<label
											class="field__label"
											for="NewsletterForm--{{ section.id }}"
											type="hidden"
										>
											{{- 'newsletter.label' | t -}}
										</label>
									</div>
									{%- if form.errors -%}
										<small
											class="newsletter-form__message form__message"
											id="Newsletter-error--{{ section.id }}"
										>
											{%- render 'icon-error' -%}
											{{-
												form.errors.translated_fields.email
												| capitalize
											}}
											{{ form.errors.messages.email -}}
										</small>
									{%- endif -%}
								</div>
								
									<button
										type="submit"
										class="button button--{{ block.settings.button_style }}"
										name="commit"
									>
										{{'newsletter.button_label' | t }}
										{% if block.settings.button_arrow %}
											<span class="button-icon">
												{% render 'icon-button-arrow' %}
											</span>
										{% endif %}
									</button>
								
							</div>
							{%- if form.posted_successfully? -%}
								<h3
									class="newsletter-form__message newsletter-form__message--success form__message"
									id="Newsletter-success--{{ section.id }}"
									tabindex="-1"
									autofocus
								>
									{% render 'icon-success' -%}
									{{- 'newsletter.success' | t }}
								</h3>
							{%- endif -%}
						{% endform %}
					</div>
				</div>
			{% endif %}

			{% if block.settings.inserted_show %}
				<div class="blog-articles-aside__inserted">
					<h3 class="blog-articles-aside__posts-header large-font">{{ block.settings.inserted_heading }}</h3>
					<div>{{ block.settings.inserted_content }}</div>
				</div>
			{% endif %}
				</aside>
			{% endif %}
			</div>
		</div>
		{%- if paginate.pages > 1 -%}
			{%- if settings.pagination_type == 'load_more' -%}
				{% render 'load-more',
					next_url: paginate.next.url,
					count_pages: paginate.pages,
					current_page: paginate.current_page
				%}
				<div class="js-hidden">
					{% render 'pagination', paginate: paginate %}
				</div>
			{%- elsif settings.pagination_type == 'infinite_scroll' -%}
				{% render 'infinite-scroll',
					next_url: paginate.next.url,
					count_pages: paginate.pages,
					current_page: paginate.current_page
				%}
				<div class="js-hidden">
					{% render 'pagination', paginate: paginate %}
				</div>
			{% else %}
				{% render 'pagination', paginate: paginate %}
			{%- endif -%}
		{%- endif -%}
		{%- endpaginate -%}
</div>

{% schema %}
{
	"name": "t:sections.main-blog.name",
	"tag": "section",
	"class": "section-main-blog slideshow-section",
	"settings": [
		{
			"type": "header",
			"content": "t:sections.all.slider_options.header.content"
		},
		{
			"type": "color_scheme",
			"id": "color_scheme",
			"default": "background-4",
			"label": "t:sections.all.color_scheme.label"
		},
		{
			"type": "select",
			"id": "section_layout",
			"default": "full",
			"label": "t:sections.all.section_layout.label",
			"options": [
				{
					"value": "full",
					"label": "t:sections.all.section_layout.options.options__1.label"
				},
				{
					"value": "container",
					"label": "t:sections.all.section_layout.options.options__2.label"
				}
			]
		},
		{
			"type": "header",
			"content": "t:sections.all.image.header.content"
		},
		{
			"type": "select",
			"id": "image_size",
			"default": "large",
			"label": "t:sections.all.image.aspect_ratio.label",
			"options": [
				{
					"value": "1/1",
					"label": "t:sections.all.image.aspect_ratio.options__1.label"
				},
				{
					"value": "3/2",
					"label": "t:sections.all.image.aspect_ratio.options__2.label"
				},
				{
					"value": "4/3",
					"label": "t:sections.all.image.aspect_ratio.options__3.label"
				},
				{
					"value": "16/9",
					"label": "t:sections.all.image.aspect_ratio.options__4.label"
				},
				{
					"value": "21/9",
					"label": "t:sections.all.image.aspect_ratio.options__5.label"
				},
				{
					"value": "adapt",
					"label": "t:sections.all.image.aspect_ratio.options__6.label"
				},
				{
					"value": "large",
					"label": "t:sections.all.image.aspect_ratio.options__7.label"
				}
			]
		},
		{
			"type": "header",
			"content": "t:sections.all.button.header.content"
		},
		{
			"type": "select",
			"id": "button_style",
			"options": [
				{
					"value": "primary",
					"label": "t:sections.all.button.style.options__1.label"
				},
				{
					"value": "secondary",
					"label": "t:sections.all.button.style.options__2.label"
				}
			],
			"default": "primary",
			"label": "t:sections.all.button.style.label"
		},
		{
			"type": "checkbox",
			"id": "button_arrow",
			"default": true,
			"label": "t:sections.all.button.arrow.label"
		},
		{
			"type": "range",
			"id": "overlay_opacity",
			"min": 0,
			"max": 100,
			"default": 20,
			"unit": "%",
			"label": "t:sections.all.overlay_opacity.label"
		},
		{
			"type": "checkbox",
			"id": "is_autoplay",
			"default": true,
			"label": "t:sections.all.slider_options.slider_is_autoplay.label"
		},
		{
			"type": "checkbox",
			"id": "is_hover_stop_autoplay",
			"default": false,
			"label": "t:sections.all.slider_options.slider_hover_autoplay_stop.label"
		},
		{
			"type": "checkbox",
			"id": "show_bullets",
			"default": true,
			"label": "t:sections.all.slider_options.pagination.label"
		},
		{
			"type": "checkbox",
			"id": "parallax",
			"default": true,
			"label": "t:sections.all.slider_options.parallax.label"
		},
		{
			"type": "range",
			"id": "slideshow_speed",
			"min": 0,
			"max": 6,
			"step": 0.1,
			"default": 1.1,
			"unit": "s",
			"label": "t:sections.all.slider_options.speed.label"
		},
		{
			"type": "range",
			"id": "slideshow_delay",
			"min": 0,
			"max": 8,
			"step": 0.1,
			"default": 3,
			"unit": "s",
			"label": "t:sections.all.slider_options.delay.label"
		},
		{
			"type": "select",
			"id": "slide_effects",
			"options": [
				{
					"value": "slide",
					"label": "t:sections.all.slider_options.effects.options.options__1.label"
				},
				{
					"value": "fade",
					"label": "t:sections.all.slider_options.effects.options.options__2.label"
				},
				{
					"value": "coverflow",
					"label": "t:sections.all.slider_options.effects.options.options__3.label"
				},
				{
					"value": "creative",
					"label": "t:sections.all.slider_options.effects.options.options__4.label"
				},
				{
					"value": "flip",
					"label": "t:sections.all.slider_options.effects.options.options__5.label"
				}
			],
			"default": "slide",
			"label": "t:sections.all.slider_options.effects.label"
		},
		{
			"type": "header",
			"content": "t:sections.slideshow.settings.additional_text.header"
		},
		{
			"type": "richtext",
			"id": "additional_text",
			"default": "<p>Scroll</p>",
			"label": "t:sections.all.text.label"
		},
		{
			"type": "checkbox",
			"id": "enable_additional_text",
			"default": true,
			"label": "t:sections.slideshow.settings.additional_text.enable"
		},
		{
			"type": "header",
			"content": "t:sections.main-blog.settings.slider_options.slider_margin.header"
		},
		{
			"type": "select",
			"id": "padding_top",
			"options": [
				{
					"value": "no-indent",
					"label": "t:sections.all.section-padding.options__1.label"
				},
				{
					"value": "xs",
					"label": "t:sections.all.section-padding.options__2.label"
				},
				{
					"value": "s",
					"label": "t:sections.all.section-padding.options__3.label"
				},
				{
					"value": "m",
					"label": "t:sections.all.section-padding.options__4.label"
				},
				{
					"value": "l",
					"label": "t:sections.all.section-padding.options__5.label"
				}
			],
			"default": "no-indent",
			"label": "t:sections.all.section-margin.margin_top.label"
		},
		{
			"type": "select",
			"id": "padding_bottom",
			"options": [
				{
					"value": "no-indent",
					"label": "t:sections.all.section-padding.options__1.label"
				},
				{
					"value": "xs",
					"label": "t:sections.all.section-padding.options__2.label"
				},
				{
					"value": "s",
					"label": "t:sections.all.section-padding.options__3.label"
				},
				{
					"value": "m",
					"label": "t:sections.all.section-padding.options__4.label"
				},
				{
					"value": "l",
					"label": "t:sections.all.section-padding.options__5.label"
				}
			],
			"default": "m",
			"label": "t:sections.all.section-margin.margin_bottom.label"
		},
		{
			"type": "header",
			"content": "t:sections.main-blog.settings.header.content"
		},
		{
			"type": "select",
			"id": "card_type",
			"default": "default",
			"label": "t:sections.all.article_card.card_type.label",
			"options": [
				{
					"value": "default",
					"label": "t:sections.all.article_card.card_type.options.option__1"
				},
				{
					"value": "overlay",
					"label": "t:sections.all.article_card.card_type.options.option__2"
				}
			]
		},
		{
			"type": "checkbox",
			"id": "show_image",
			"default": true,
			"label": "t:sections.main-blog.settings.show_image.label",
			"info": "t:sections.main-blog.settings.show_image.info"
		},
		{
			"type": "checkbox",
			"id": "show_tags",
			"default": true,
			"label": "t:sections.main-blog.settings.show_tags.label"
		},
		{
			"type": "checkbox",
			"id": "show_date",
			"default": true,
			"label": "t:sections.main-blog.settings.show_date.label"
		},
		{
			"type": "checkbox",
			"id": "show_author",
			"default": true,
			"label": "t:sections.main-blog.settings.show_author.label"
		},
		{
			"type": "checkbox",
			"id": "show_excerpt",
			"default": false,
			"label": "t:sections.main-blog.settings.show_excerpt.label"
		},
		{
			"type": "paragraph",
			"content": "t:sections.main-blog.settings.paragraph.content"
		},
		{
			"type": "header",
			"content": "t:sections.all.section-margin.header.content"
		},
		{
			"type": "select",
			"id": "margin_top",
			"options": [
				{
					"value": "no-indent",
					"label": "t:sections.all.section-margin.options__1.label"
				},
				{
					"value": "xs",
					"label": "t:sections.all.section-margin.options__2.label"
				},
				{
					"value": "s",
					"label": "t:sections.all.section-margin.options__3.label"
				},
				{
					"value": "m",
					"label": "t:sections.all.section-margin.options__4.label"
				},
				{
					"value": "l",
					"label": "t:sections.all.section-margin.options__5.label"
				}
			],
			"default": "s",
			"label": "t:sections.all.section-margin.margin_top.label"
		},
		{
			"type": "select",
			"id": "margin_bottom",
			"options": [
				{
					"value": "no-indent",
					"label": "t:sections.all.section-margin.options__1.label"
				},
				{
					"value": "xs",
					"label": "t:sections.all.section-margin.options__2.label"
				},
				{
					"value": "s",
					"label": "t:sections.all.section-margin.options__3.label"
				},
				{
					"value": "m",
					"label": "t:sections.all.section-margin.options__4.label"
				},
				{
					"value": "l",
					"label": "t:sections.all.section-margin.options__5.label"
				}
			],
			"default": "s",
			"label": "t:sections.all.section-margin.margin_bottom.label"
		}
	],
	"blocks": [
		{
			"type": "aside",
			"name": "t:sections.main-blog.blocks.aside.name",
			"limit": 1,
			"settings": [
				{
					"type" : "header",
					"content": "t:sections.main-blog.blocks.aside.settings.posts.header"
				},
				{
					"type": "checkbox",
					"id": "post_show",
					"default": false,
					"label": "t:sections.main-blog.blocks.aside.settings.enable"
				},
				{
					"type": "inline_richtext",
					"id": "posts_heading",
					"label": "t:sections.all.heading.label",
					"default": "Heading"
				},
				{
					"type": "text",
					"id": "posts_tag",
					"label": "t:sections.main-blog.blocks.aside.settings.posts.tag.label",
					"info": "t:sections.main-blog.blocks.aside.settings.posts.tag.info"
				},
				{
					"type" : "header",
					"content": "t:sections.main-blog.blocks.aside.settings.newsletter.header"
				},
				{
					"type": "checkbox",
					"id": "newsletter_show",
					"default": true,
					"label": "t:sections.main-blog.blocks.aside.settings.enable"
				},
				{
					"type": "color_scheme",
					"id": "color_scheme",
					"default": "background-3",
					"label": "t:sections.all.color_scheme.label"
				},
				{
					"type": "inline_richtext",
					"id": "newsletter_heading",
					"label": "t:sections.all.heading.label",
					"default": "Heading"
				},
				{
					"type": "richtext",
					"id": "newsletter_description",
					"default": "<p>Some text</p>",
					"label": "t:sections.all.text.label"
				},
				{
					"type": "header",
					"content": "t:sections.all.button.header.content"
				},
				{
					"type": "select",
					"id": "button_style",
					"options": [
						{
							"value": "primary",
							"label": "t:sections.all.button.style.options__1.label"
						},
						{
							"value": "secondary",
							"label": "t:sections.all.button.style.options__2.label"
						},
						{
							"value": "tertiary",
							"label": "t:sections.all.button.style.options__3.label"
						}
					],
					"default": "primary",
					"label": "t:sections.all.button.style.label"
				},
				{
					"type": "checkbox",
					"id": "button_arrow",
					"default": false,
					"label": "t:sections.all.button.arrow.label"
				},
				{
					"type" : "header",
					"content": "t:sections.main-blog.blocks.aside.settings.inserted.header"
				},
				{
					"type": "checkbox",
					"id": "inserted_show",
					"default": false,
					"label": "t:sections.main-blog.blocks.aside.settings.enable"
				},
				{
					"type": "inline_richtext",
					"id": "inserted_heading",
					"label": "t:sections.all.heading.label",
					"default": "Heading"
				},
				{
					"type": "html",
					"id": "inserted_content",
					"label": "t:sections.main-blog.blocks.aside.settings.inserted.field"
				}
			]
		}
	]
}
{% endschema %}
